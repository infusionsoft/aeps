# AEP Purpose and Guidelines

As Thryv's API ecosystem grows, we need consistent documentation and design patterns to ensure our APIs are intuitive,
reliable, and easy to use. AEPs provide a standardized way to document and share API design decisions across Thryv.

## What is an AEP?

AEP stands for **API Enhancement Proposal**, which is a design document
providing high-level, concise documentation for API development.

Companies that adopt the AEP program use them as a source of truth for
API-related documentation, and the means by which service producers discuss and
come to consensus on API guidance. AEPs are maintained as Markdown files with
metadata in the [AEP GitHub repository][].

[AEP GitHub repository]: https://github.com/infusionsoft/aeps

## Types of AEPs

There are several different types of AEPs, described below. The list of AEP
types may evolve over time as necessary.

### Guidance

These AEPs describe guidance on API design. These are provided as instruction
for API producers to help write simple, intuitive, and consistent APIs and are
used by API reviewers as a basis for review comments.

### Process

These AEPs describe a process surrounding API design. They often affect the AEP
process itself and are used to enhance the way in which AEPs are handled.

## Stakeholders

### Editors

The AEP editors are responsible for:

* Reviewing and approving AEPs
* Maintaining AEP quality and consistency
* Managing the AEP workflow and numbering
* Ensuring AEPs are clear, actionable, and well-written

Current editors are the members of the [Gryffindor team][].

[Gryffindor team]: https://github.com/orgs/infusionsoft/teams/gryffindor

## States

At any given time, AEPs may exist in a variety of states as they work their way
through the process. The following is a summary of each state.

### Draft

The initial state for an AEP is the "Draft" state. This means that the AEP is
being discussed and iterated upon.

### Reviewing

The AEP has a solid proposal and is under formal review by the AEP maintainers.
Changes may still be requested before approval.

### Approved

The AEP is approved and represents Thryv's current best practice.
This is the state you should follow for API design.

### Withdrawn

If an AEP is withdrawn by the author or champion, it enters "withdrawn" state.
AEPs that are withdrawn may be taken up by another champion.

### Rejected

If an AEP is rejected by the AEP editors, it enters "rejected" state. AEPs that
are rejected remain and provide documentation and reference to inform future
discussions.

### Replaced

The AEP has been superseded by a newer AEP with updated guidance.

## Workflow

The following workflow describes the process for proposing an AEP, and moving
an AEP from proposal to implementation to final acceptance.

### Overview

```mermaid
graph LR
  classDef orange fill:#FFA500,stroke:#000,stroke-width:1px;
  classDef lightskyblue fill:#87CEFA,stroke:#000,stroke-width:1px;
  classDef palegreen fill:#98FB98,stroke:#000,stroke-width:1px;
  classDef mistyrose fill:#FFE4E1,stroke:#000,stroke-width:1px;
  classDef lightsteelblue fill:#B0C4DE,stroke:#000,stroke-width:1px;

  draft[Draft]:::orange
  reviewing[Reviewing]:::lightskyblue
  approved[Approved]:::palegreen
  withdrawn[Withdrawn]:::mistyrose
  rejected[Rejected]:::mistyrose
  replaced[Replaced]:::lightsteelblue

  draft --> reviewing
  draft -.-> withdrawn
  reviewing --> approved
  reviewing -.-> withdrawn
  reviewing -.-> rejected
  approved -.-> replaced
  reviewing -.-> replaced
```

### Proposing an AEP

Anyone at Thryv can propose a AEP!

In order to propose an AEP, first open a pull request with a draft AEP; the AEP
should conform to the guidance in AEP-8. Most AEPs **should** be no more than
two pages if printed out.

If the technical steering committee has suggested an AEP number, use that;
otherwise use 9999 (and expect to change it during the course of the review).

**Important:** Ensure that the PR is editable by maintainers.

In most circumstances, the committee will assign the proposal an AEP number and
begin discussion. Once there is consensus, the committee will merge the PR, and
the AEP will enter the "reviewing" state.

The committee **may** reject an AEP outright if they have an obvious reason to
do so (e.g. the proposal was already discussed and rejected in another AEP or
is fundamentally unsound), in which case the PR is not merged.

### Accepting an AEP

The editors will work together to ensure that qualified proposals do not linger
in review.

To gain final approval, an AEP **must** be approved by, at minimum, two members
of the technical steering committee. Additionally, there **should not** be any
committee members requesting significant changes (indicated by the use of the
"changes requested" feature on GitHub).

**Note:** If an AEP editor is the primary author of an AEP, then at least two
_other_ editors must approve it.

Once the AEP is approved, the editors will update the state of the AEP to
reflect this and submit the PR.

### Withdrawing or Rejecting an AEP

The author of an AEP may decide, after further consideration, that an AEP
should not advance. If so, the author may withdraw the AEP by updating the PR
adding a notice of withdrawal with an explanation of the rationale.

Additionally, the author may be unable to get consensus among the group and the
technical steering committee may elect to reject the AEP. In this situation,
the committee shall amend the PR adding a notice of rejection with an
explanation of the rationale. In both cases, the committee **must** update the
state accordingly and submit the PR.

### Replacing an AEP

In rare cases, it may be necessary to replace an AEP with another one. This is
not general practice: minor edits to approved AEPs are acceptable and will be
the common way to tweak guidance. However, if new guidance fundamentally alters
the old guidance in some way, then the AEP editors shall create a new AEP that,
once approved, will replace the old one. The old one then enters the "Replaced"
state and will link to the new, current AEP.

## Questions?

* Slack: [#ask-pd-api][]
* Repository: [GitHub Issues][]

[#ask-pd-api]: https://keaporg.enterprise.slack.com/archives/C5HG5M4FP

[GitHub Issues]: https://github.com/infusionsoft/aeps/issues

## Changelog

- **2025-10-30**: Initial AEP-1 for Thryv, adapted from [Google AIP-1][] and aep.dev [AEP-1][].

[Google AIP-1]: https://google.aip.dev/1

[AEP-1]: https://aep.dev/1
